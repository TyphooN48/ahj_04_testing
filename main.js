(()=>{"use strict";class t{constructor(){this.cardTypes=[{start:"4",type:"visa"},{start:"51",type:"master"},{start:"52",type:"master"},{start:"53",type:"master"},{start:"54",type:"master"},{start:"55",type:"master"},{start:"50",type:"maestro"},{start:"58",type:"maestro"},{start:"63",type:"maestro"},{start:"67",type:"maestro"},{start:"2",type:"mir"}]}paySystem(t){let s=null;return this.cardTypes.forEach((a=>{t.startsWith(a.start)&&(s=a.type)})),s}static isValid(t){let s=0,a=!1;for(let r=t.replace(/\D/g,"").length-1;r>=0;r--){let e=parseInt(t.charAt(r),10);a&&(e*=2)>9&&(e-=9),s+=e,a=!a}return s%10==0}}new class{constructor(s){this.parentEl=s,this.cardList=null,this.showResult=null,this.validator=new t}static get markup(){return'\n      <div data-id="card-validator-widget" class="card-validator">\n        <h3>Check your credit card number</h3>\n        <ul class="cards list-unstyled">\n          <li><span class="card visa" title="Visa">Visa</span></li>\n          <li><span class="card master" title="Mastercard">Mastercard</span></li>\n          <li><span class="card maestro" title="Maestro">Maestro</span></li>\n          <li><span class="card mir" title="Discover">Mir</span></li>\n        </ul>\n        <form id="form" class="form-inline" novalidate="novalidate">\n          <div class="form-group">\n            <input class="form-control" data-id="card_number" name="card_number" type="text" placeholder="Credit card number" data-original-title="" title="">\n            <a data-id="submitform" class="btn btn-success">Click to Validate</a>\n          </div>\n        </form>\n        <div class="validation-result_container">\n          <span data-id="validation-result" class="validation-result"></span>\n        </div>\n        <h3>Example credit card numbers</h3>\n        <table class="table table-striped table-bordered">\n          <thead>\n            <tr>\n              <th>Credit Card Type</th>\n              <th>Credit Card Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Visa</td>\n              <td>4111111111111111</td>\n            </tr>\n            <tr>\n              <td>MasterCard</td>\n              <td>5555555555554444</td>\n            </tr>\n            <tr>\n              <td>Maestro</td>\n              <td>6759416504627850</td>\n            </tr>\n            <tr>\n              <td>Mir</td>\n              <td>2201382000000013</td> \n            </tr>\n          </tbody>\n        </table>\n      </div>\n    '}static get inputSelector(){return"[data-id=card_number]"}static get submitSelector(){return"[data-id=submitform]"}bindToDOM(){this.parentEl.innerHTML=this.constructor.markup,this.showResult=this.parentEl.querySelector("[data-id=validation-result]"),this.cardList=Array.from(this.parentEl.querySelectorAll(".card"));const t=this.parentEl.querySelector(this.constructor.submitSelector),s=this.parentEl.querySelector(this.constructor.inputSelector);t.addEventListener("click",(t=>this.onSubmit(t))),s.addEventListener("input",(t=>this.onInput(t)))}clearForm(){this.showResult.classList.remove("invalid","valid"),this.showResult.textContent="",this.cardList.forEach((t=>{t.classList.remove("cdisabled")}))}onInput(t){t.preventDefault(),this.clearForm();const s=this.parentEl.querySelector(this.constructor.inputSelector),a=this.validator.paySystem(s.value);null!==a&&this.cardList.forEach((t=>{t.classList.contains(a)||t.classList.add("cdisabled")}))}onSubmit(s){s.preventDefault();const a=this.parentEl.querySelector(this.constructor.inputSelector);t.isValid(a.value)?(this.showResult.classList.add("valid"),this.showResult.textContent="Valid"):(this.showResult.classList.add("invalid"),this.showResult.textContent="Invalid")}}(document.querySelector("#widget-container")).bindToDOM()})();